definitions:
  handlers.CTRequest:
    properties:
      instructionId:
        type: string
      receivingBIC:
        type: string
      senderBIC:
        type: string
    type: object
  handlers.CallBack:
    properties:
      referenceId:
        type: string
      status:
        type: string
    type: object
  models.AnotherTry:
    properties:
      create_at:
        type: string
      custom_signed_by:
        type: string
      remarks:
        type: string
      signed_by:
        type: string
      signed_on:
        type: boolean
      signoff_date:
        type: string
      signoff_time:
        type: string
      signon_date:
        type: string
      signon_time:
        type: string
    type: object
  models.AnotherTrys:
    properties:
      id:
        type: integer
      username:
        type: string
    type: object
  models.EmailRequest:
    properties:
      emailRequest:
        type: string
      message:
        type: string
    type: object
  models.ErrorResponse:
    properties:
      error:
        example: Invalid request body
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  title: InstaPay
  version: 1.16.2
paths:
  /SignedOn:
    post:
      consumes:
      - application/json
      description: Inserts user data into the trytable and provides a response message.
      operationId: Post-Pays
      parameters:
      - description: JSON request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.AnotherTry'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/models.AnotherTry'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Check if the user is online or offline based on input parameters.
  /delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a specific user in the database by their ID.
      parameters:
      - description: User ID to delete
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a user by ID
  /generate-token:
    post:
      consumes:
      - application/json
      operationId: Get-Token
      parameters:
      - description: JSON request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.AnotherTrys'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AnotherTrys'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Creating Token
      tags:
      - Generate TOKEN
  /get-instructionID:
    post:
      description: Get an instruction by its reference ID
      operationId: get-GetInstructionID
      parameters:
      - description: Reference ID
        in: body
        name: ReferenceId
        required: true
        schema:
          $ref: '#/definitions/handlers.CallBack'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CTRequest'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Instruction by Reference ID
      tags:
      - GetInstructionID
  /send-email:
    post:
      consumes:
      - application/json
      operationId: Post-send-email
      parameters:
      - description: JSON request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.EmailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.EmailRequest'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: send email
      tags:
      - Send Email
  /update/{id}:
    put:
      consumes:
      - application/json
      description: Update a specific user in the database by their ID.
      parameters:
      - description: User ID to update
        in: path
        name: id
        required: true
        type: integer
      - description: User object to update
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update a user by ID
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
